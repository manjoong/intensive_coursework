ssh -i key0629.pem ubuntu@ip주소

elastickWNTH = 고정 ip
그냥 vm ip로 쓸 것



VpcId : vpc-0a275e0094e01d103
RouteTableId: rtb-002946cef2f5b2117
SubnetId: subnet-00e4474609381bf6b
InternetGatewayId: igw-05c53aa53b1446a82
SG GroupId: sg-0698ef14927b51be1
InstanceId: i-08320ab88717dda3b
"PublicIp": 52.60.103.166
"AllocationId": eipalloc-032ea2d56cb32ea1d
"AssociationId": "eipassoc-0a16af139622af0fe"


> aws ec2 create-vpc --cidr-block 10.0.0.0/16
> aws ec2 modify-vpc-attribute --vpc-id vpc-0a275e0094e01d103 --enable-dns-hostnames
>  aws ec2 describe-vpcs

>  aws ec2 create-subnet --vpc-id vpc-0a275e0094e01d103 --availability-zone ca-central-1a --cidr-block 10.0.0.0/24
>  aws ec2 describe-subnets

> aws ec2 create-route-table --vpc-id vpc-0a275e0094e01d103
> aws ec2 associate-route-table --route-table-id  rtb-002946cef2f5b2117 --subnet-id subnet-00e4474609381bf6b

>  aws ec2 create-internet-gateway
> aws ec2 attach-internet-gateway --internet-gateway-id igw-05c53aa53b1446a82 --vpc-id vpc-0a275e0094e01d103

>  aws ec2 create-route --route-table-id rtb-002946cef2f5b2117 --destination-cidr-block 0.0.0.0/0 --gateway-id igw-05c53aa53b1446a82

> aws ec2 create-key-pair --key-name shKey0629-02 --query 'KeyMaterial' --output text> shkeypair_0629.pem

> aws ec2 create-security-group --group-name shSG02 --description "For my ec2" --vpc-id vpc-0a275e0094e01d103


>  curl http://checkip.amazonaws.com

>  aws ec2 authorize-security-group-ingress --group-id sg-0698ef14927b51be1 --pro
tocol tcp --port 22 --cidr 211.45.60.5/32

>  aws ec2 authorize-security-group-ingress --group-id sg-0698ef14927b51be1 --protocol tcp --port 80 --cidr 0.0.0.0/0

>  aws ec2 describe-security-groups --group-id  sg-0698ef14927b51be1

> aws ec2 run-instances --image-id ami-065ba2b6b298ed80f --count 1 --instance-ty
pe t2.micro --key-name shKey0629-02 --security-group-ids  sg-0698ef14927b51be1 --subnet-id  subnet-00e4474609381bf6b


> aws ec2 allocate-address

>  aws ec2 describe-instances | grep InstanceId

aws elb create-load-balancer --load-balancer-name manjoong-lb-02 --listeners Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80 --subnet subnet-040d704adc1c66457 subnet-040d704adc1
c66457 --security-groups sg-062aad70a1031304a


aws elb register-instances-with-load-balancer --load-balancer-name manjoong-lb-02 --instances i-06e83d185daccbe06 i-0db0f7b9920190f28


1. VPC생성
(vpc-05a30dba05ac631df)

2. vpc enable

3. subnet생성
(subnet-005c7707c1bea0ef4)

4. 라우트 테이블 생성
(rtb-04018691ba1f7b6da)

5. 라우트 테이블을 서브넷과 연결

6. 인터넷 게이트웨이 생성
(igw-0853fdff960eb7ac9)

7. 인터넷 게이트웨이와 VPC를 연결

8. 라우팅 테이블에 인터넷 게이트웨이 라우팅 룰 추가 

9. 키페어 생성

10. 보안그룹생성 	vpc에
(sg-0f3351e16e162c1d6)

11. 내 ip 확인

12. 보안그룹에 22번, 80번 포트 내 아이피로 인바운드 권한 추가

13. 인스턴스 생성
(i-0cc85c7023ab828d3)

14. PUBLIC IP 할당( aws ec2 allocate-address)
(54.251.254.148)
(eipalloc-050da68ed6add4a79)


13. 인스턴스에 PUBLIC IP 연결( aws ec2 associate-address --instance-id i-0cc85c7023ab828d3 --allocation-id eipalloc-050da68ed6add4a79)

07/01
aws configure
aws ec2 create-vpc --cidr-block 10.0.0.0/16
aws ec2 modify-vpc-attibute --vpc-id vpc-06bb9dce2d799e09f --enable-dns-hostname
aws ec2 modify-vpc-attribute --vpc-id vpc-06bb9dce2d799e09f --enable-dns-hostname
aws ec2 describe-vpcs
aws ec2 create-subnet --vpc-id vpc-06bb9dce2d799e09f
aws ec2 create-subnet --vpc-id vpc-06bb9dce2d799e09f --availability-zone ap-southeast-1 --cidr-block 10.0.0.0/24
aws ec2 create-subnet --vpc-id vpc-06bb9dce2d799e09f --availability-zone ap-southeast-1a --cidr-block 10.0.0.0/24
aws ec2 create-subnet --vpc-id vpc-06bb9dce2d799e09f --availability-zone ap-southeast-1a --cidr-block 10.0.1.0/24
 aws ec2 create-subnet --vpc-id vpc-06bb9dce2d799e09f --availability-zone ap-southeast-1b --cidr-block 10.0.2.0/24

aws ec2 create-subnet --vpc-id vpc-06bb9dce2d799e09f --availability-zone ap-southeast-1b --cidr-block 10.0.3.0/24

aws ec2 create-route-table --vpc-id vpc-06bb9dce2d799e09f
aws ec2 associate-route-table --route-table-id rtb-050f85ad7faf53fd1 --subnet-id subnet-035d5f12020d24c5c
aws ec2 associate-route-table --route-table-id rtb-050f85ad7faf53fd1 --subnet-id subnet-0093b1bf79b438a57
aws ec2 associate-route-table --route-table-id rtb-0d603aa29556437e0 --subnet-id subnet-05a9ad04456fac2d7
aws ec2 associate-route-table --route-table-id rtb-0d603aa29556437e0 --subnet-id subnet-08c15e546a08afc2b
 1705  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aws ec2 create-internet-gateway
aws ec2 attach-0internet-gateway igw-0019c93a8fda41e1a
aws ec2 attach-internet-gateway igw-0019c93a8fda41e1a --vpc-id vpc-06bb9dce2d799e09f
aws ec2 attach-internet-gateway-id igw-0019c93a8fda41e1a --vpc-id vpc-06bb9dce2d799e09f
aws ec2 attach-internet-gateway --internet-gateway-id igw-0019c93a8fda41e1a --vpc-id vpc-06bb9dce2d799e09f
 aws ec2 create-route --route-table-id rtb-050f85ad7faf53fd1 --destination-cidr-block 0.0.0.0/0 --gateway-id igw-0019c93a8fda41e1a
aws ec2 create-nat-gateway

aws ec2 allocate-address
aws ec2 create-nat-gateway --subnet-id subnet-08c15e546a08afc2b --allocation-id eipalloc-02fc4c4f8fff03d7b
aws ec2 create-route --route-table-id rtb-0d603aa29556437e0 --destination-cidr-block 0.0.0.0/0 --gateway-id nat-00e840ddb8eaa1a84
aws ec2 create-nat-gateway --subnet-id subnet-035d5f12020d24c5c --allocation-id eipalloc-02fc4c4f8fff03d7b
aws ec2 create-route --route-table-id rtb-0d603aa29556437e0 --destination-cidr-block 0.0.0.0/0 --gateway-id nat-07da2b5636f25ffb3
aws ec2 createw-security-group --group-name manjoong-sg01 --description "For my ec2" --vpc-id vpc-06bb9dce2d799e09f
aws ec2 create-security-group --group-name manjoong-sg01 --description "For my ec2" --vpc-id vpc-06bb9dce2d799e09f
aws ec2 authorizew-security-group-ingress --group-id sg-0f2953eb6a1873f2e --protocol tcp --port 22 --cidr 0.0.0.0/0
aws ec2 authorize-security-group-ingress --group-id sg-0f2953eb6a1873f2e --protocol tcp --port 22 --cidr 0.0.0.0/0


 aws ec2 create-security-group --group-name manjoong-sg-ELB --description "For my ELB" --vpc-id vpc-06bb9dce2d799e09f

aws ec2 authorize-security-group-ingress --group-id sg-09b282ecbd590ab63 --protocol tcp --port 22 --cidr 0.0.0.0/0


 aws ec2 create-security-group --group-name manjoong-sg-ELB --description "For my ELB" --vpc-id vpc-06bb9dce2d799e09f

aws ec2 authorize-security-group-ingress --group-id sg-09b282ecbd590ab63 --protocol tcp --port 22 --cidr 0.0.0.0/0

aws ec2 authorize-security-group-ingress --group-id sg-09b282ecbd590ab63 --protocol tcp --port 80 --cidr 0.0.0.0/0

aws ec2 run-instances --image-id ami-063e3af9d2cc7fe94 --count 1 --instance-type t2.micro --key-name manjoog_ssh-3 --security-group-ids sg-0f2953eb6a1873f2e --subnet-id subnet-0093b1bf79b438a57 --associate-public-ip-address


aws elb create-load-balancer --load-balancer-name manjoong-lb01 --listeners Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80 --tag Key=NAME,Value=manjoong-lb --subnet subnet-035d5f12020d24c5c subnet-0093b1bf79b438a57 --security-groups sg-09b282ecbd590ab63
aws ec2 create-image --instance-id i-084c270b6dd4d3356 --name manjoong-bastion-img --description "for bastion image->nginx"
aws autoscaling create-launch-configuration --launch-configuration-name manjoong-autoconfig --image-id ami-0d6795db73773bf87 --key-name manjoog_ssh-3 --no-ebs-optimized --instance-type t2.micro --instance-monitoring Enabled=true --security-group sg-0f2953eb6a1873f2e --no-associate-public-ip-address
aws autoscaling create-auto-scaling-group --auto-scaling-group-name manjoong-auto-group --launch-configuration-name manjoong-autoconfig --desired-capacity 2 --min-size 2 --max-size 5 --health-check-type EC2 --health-check-grace-period 300 --termination-policies "Default" --availability-zones ap-southeast-1a ap-southeast-1b --vpc-zone-identifier "subnet-08c15e546a08afc2b,subnet-05a9ad04456fac2d7" --default-cooldown 300


 
 1743  aws autoscaling attach-load-balancers --auto-scaling-group-name manjoong-auto-group --load-balancer-name manjoong-lb01


 1747  aws autpsca;ing put-scaling-policy --auto-scaling-group-name manjoong-auto-group --policy-name manjoong-policy --adjustment-type ChangeInCapacity --scaling-adjustment -1 --cooldown 180
 1748  aws autpscaling put-scaling-policy --auto-scaling-group-name manjoong-auto-group --policy-name manjoong-policy --adjustment-type ChangeInCapacity --scaling-adjustment -1 --cooldown 180
 1749  aws autoscaling put-scaling-policy --auto-scaling-group-name manjoong-auto-group --policy-name manjoong-policy --adjustment-type ChangeInCapacity --scaling-adjustment -1 --cooldown 180
 1750  aws cloudwatch put-metric-alarm --alarm-name manjoong-alarm --metric-name CPUUtilization --namespace AWS/EC2 --static Average --period 300--threshold 20 --comparison-operator LessThanOrEqualToThreshold --dimensions Name=AutoScalingGroupName,Value=manjoong-auto-group --evaluation=periods 1 --alarm-action arn:aws:autoscaling:ap-southeast-1:052937454741:scalingPolicy:3ccabfc3-c8e9-46e4-b617-848869470a15:autoScalingGroupName/manjoong-auto-group:policyName/manjoong-policy
 1751  aws cloudwatch put-metric-alarm --alarm-name manjoong-alarm --metric-name CPUUtilization --namespace AWS/EC2 --statics Average --period 300--threshold 20 --comparison-operator LessThanOrEqualToThreshold --dimensions Name=AutoScalingGroupName,Value=manjoong-auto-group --evaluation=periods 1 --alarm-action arn:aws:autoscaling:ap-southeast-1:052937454741:scalingPolicy:3ccabfc3-c8e9-46e4-b617-848869470a15:autoScalingGroupName/manjoong-auto-group:policyName/manjoong-policy
 1752  aws cloudwatch put-metric-alarm --alarm-name manjoong-alarm --metric-name CPUUtilization --namespace AWS/EC2 --statistics Average --period 300--threshold 20 --comparison-operator LessThanOrEqualToThreshold --dimensions Name=AutoScalingGroupName,Value=manjoong-auto-group --evaluation=periods 1 --alarm-action arn:aws:autoscaling:ap-southeast-1:052937454741:scalingPolicy:3ccabfc3-c8e9-46e4-b617-848869470a15:autoScalingGroupName/manjoong-auto-group:policyName/manjoong-policy
 1753  aws cloudwatch put-metric-alarm --alarm-name manjoong-alarm --metric-name CPUUtilization --namespace AWS/EC2 --statistic Average --period 300--threshold 20 --comparison-operator LessThanOrEqualToThreshold --dimensions Name=AutoScalingGroupName,Value=manjoong-auto-group --evaluation=periods 1 --alarm-action arn:aws:autoscaling:ap-southeast-1:052937454741:scalingPolicy:3ccabfc3-c8e9-46e4-b617-848869470a15:autoScalingGroupName/manjoong-auto-group:policyName/manjoong-policy
 1754  aws cloudwatch put-metric-alarm --alarm-name manjoong-alarm --metric-name CPUUtilization --namespace AWS/EC2 --statistic Average --period 300--threshold 20 --comparison-operator LessThanOrEqualToThreshold --dimensions Name=AutoScalingGroupName,Value=manjoong-auto-group --evaluation-periods 1 --alarm-action arn:aws:autoscaling:ap-southeast-1:052937454741:scalingPolicy:3ccabfc3-c8e9-46e4-b617-848869470a15:autoScalingGroupName/manjoong-auto-group:policyName/manjoong-policy
 1755  aws cloudwatch put-metric-alarm --alarm-name manjoong-alarm --metric-name CPUUtilization --namespace AWS/EC2 --statistic Average --period 300 --threshold 20 --comparison-operator LessThanOrEqualToThreshold --dimensions Name=AutoScalingGroupName,Value=manjoong-auto-group --evaluation-periods 1 --alarm-action arn:aws:autoscaling:ap-southeast-1:052937454741:scalingPolicy:3ccabfc3-c8e9-46e4-b617-848869470a15:autoScalingGroupName/manjoong-auto-group:policyName/manjoong-policy
 1756  aws autoscaling put-scaling-policy --auto-scaling-group-name manjoong-auto-group --policy-name manjoong-policy-plus --adjustment-type ChangeInCapacity --scaling-adjustment 1 --cooldown 180
 1757  aws cloudwatch put-metric-alarm --alarm-name manjoong-alarm-plus --metric-name CPUUtilization --namespace AWS/EC2 --statistic Average --period 300 --threshold 70 --comparison-operator GreaterThanOrEqualToThreshold --dimensions Name=AutoScalingGroupName,Value=manjoong-auto-group --evaluation-periods 1 --alarm-action arn:aws:autoscaling:ap-southeast-1:052937454741:scalingPolicy:b564ff39-bb7f-4a25-9d42-e1cfe1982f85:autoScalingGroupName/manjoong-auto-group:policyName/manjoong-policy-plus
